{
    "name": "framework_da",
    "phase": "train",
    // train or val
    "gpu_ids": [
      0
    ],
    "change_sizes": {
      "0.0": 128,
      "0.3": 128,
      "0.9": 128,
      "1.01": 128
    },
    "path": {
      //set the path
      "log": "logs",
      "tb_logger": "tb_logger",
      "results": "results",
      "checkpoint": "checkpoint",
      "resume_state": "./ddpm_fcb_230221_121802"
    //   "resume_state": null
    },
    "datasets": {
      "train": {
        "name": "RESIDE_train_syntheic",
        "mode": "HR",
        "dataroot": "dataset/RESIDE/HR_hazy_src",
        "hr_path": "dataset/RESIDE/HR",
        "datatype": "RESIDE_img_syntheic",
        "l_resolution": 128,
        "r_resolution": 128,
        "batch_size": 3,
        "num_workers": 12,
        "use_shuffle": true,
        "HazeAug": true,
        "rt_da_ref": [
          "dataset/RESIDE/HR_hazy_src"
        ],
        "depth_img_path": "dataset/RESIDE/HR_depth/",
        "data_len": -1 // -1 represents all data used in train
      },
      "val": {
              "name": "dehaze_val",
              "mode": "LRHR",
              // "dataroot": "dataset/I-HAZE-PROCESS",
  //            "dataroot": "dataset/RTTS-PROCESS",
             "dataroot": "dataset/O-HAZE-PROCESS",
  //            "dataroot": "dataset/DenseHaze",
              //"dataroot": "dataset/NhHaze",
              "datatype": "haze_img", 
  
              "l_resolution": 512,
              "r_resolution": 512,
              "data_len": 5000
      }
    },
    "model": {
      "which_model_G": "dehaze_with_z_v2",
      "finetune_norm": false,
      "FCB": true,
      "unet": {
        "in_channel": 6,
        "out_channel": 3,
        "inner_channel": 64,
        "norm_groups": 16,
        "channel_multiplier": [
          1,
          2,
          4,
          8,
          16
        ],
        "attn_res": [
          // 16
        ],
        "res_blocks": 1,
        "dropout": 0.2
      },
      "beta_schedule": {
        // use munual beta_schedule for acceleration
        "train": {
          "schedule": "linear",
          "n_timestep": 2000,
          "linear_start": 1e-6,
          "linear_end": 1e-2
        },
        "val": {
          "schedule": "linear",
          "n_timestep": 2000,
          "linear_start": 1e-6,
          "linear_end": 1e-2
        }
      },
      "diffusion": {
        "image_size": 128,
        "channels": 3,
        //sample channel
        "conditional": true,
        // unconditional generation or unconditional generation(super_resolution)
        "start_step": 1000
      }
    },
    "train": {
      "n_iter": 2000000,
      "save_checkpoint_freq": 1e4,
      "print_freq": 50,
      "optimizer": {
        "type": "adam",
        "lr": 1e-4
      },
      "ema_scheduler": {
        // not used now
        "step_start_ema": 5000,
        "update_ema_every": 1,
        "ema_decay": 0.9999
      }
    },
    "wandb": {
      "project": "dehaze_with_z_v2"
    }
  }
  // Ask AI to edit or generate...
  
